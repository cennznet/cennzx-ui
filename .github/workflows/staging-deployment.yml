name: Staging Deploy

on:
  push:
    branches:
      - ipfs_deployment

jobs:
  build_code:
    name: Build Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Config yarn cache
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: build
      run: |
        yarn install --frozen-lockfile
        yarn build:staging

    - name: Upload build files
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: ./dist

  deploy:
    name: Deploy Staging
    needs: build_code
    runs-on: macos-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: build-files
          path: ./dist

      - name: Deploy to IPFS
        uses: aquiladev/ipfs-action@v0.1.5
        with:
          path: ./dist
          service: pinata
          pinataKey: ${{ secrets.PINATA_KEY }}
          pinataSecret: ${{ secrets.PINATA_SECRET }}
          pinataPinName: CENNZX
        id: IPFS_CID

      - name: Echo IPFS URL
        run: |
          echo $IPFS_CID

#      # This branch updates a dnslink for a domain if the current branch should be deployed to prod.
#      # see https://github.com/ipfs-shipyard/js-dnslink-dnsimple
#      - run: npx dnslink-dnsimple --domain https://cennzx.centrality.me/> --link /ipfs/${{ steps.ipfs.outputs.cid }}
#        env:
#          DNSIMPLE_TOKEN: ${{ secrets.DNSIMPLE_TOKEN }}
#        # TODO: change to master once merged.
#        if: github.ref == 'refs/heads/beta'